@using System.Collections.Generic
@model ABankAdmin.ViewModels.CIFInfoVMForRenewal

@{
    ViewBag.Title = "Renewal";
}

<h2>Renewal THE ICONIC Customer</h2>

@using (Html.BeginForm(Html.BeginForm("Renewal", "Renewal", FormMethod.Post, new { autocomplete = "off", @id = "create" })))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)
        @Html.HiddenFor(model => model.ApproverEmail)
        @Html.HiddenFor(model => model.UserEmail)

        <div class="form-group">
            @Html.LabelFor(model => model.CIFID, htmlAttributes: new { @class = "control-label col-md-2", @style = "width:25%" })
            <div class="form-group col-md-5">
                @Html.EditorFor(model => model.CIFID, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.CIFID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.USERTYPE, htmlAttributes: new { @class = "control-label col-md-2", @style = "width:25%" })
            <div class="form-group col-md-5">
                @Html.EditorFor(model => model.USERTYPE, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.USERTYPE, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.USERTYPECODE, htmlAttributes: new { @class = "control-label col-md-2", @style = "width:25%" })
            <div class="form-group col-md-5">
                @Html.EditorFor(model => model.USERTYPECODE, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.USERTYPECODE, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.NAME, htmlAttributes: new { @class = "control-label col-md-2", @style = "width:25%" })
            <div class="form-group col-md-5">
                @Html.EditorFor(model => model.NAME, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.NAME, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.NRC, htmlAttributes: new { @class = "control-label col-md-2", @style = "width:25%" })
            <div class="form-group col-md-5">
                @Html.EditorFor(model => model.NRC, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.NRC, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.strEffectiveDate, htmlAttributes: new { @class = "control-label col-md-2", @style = "width:25%" })
            <div class="form-group col-md-5">
                @Html.EditorFor(model => model.strEffectiveDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" ,@id="old_effDate"} })
                @Html.ValidationMessageFor(model => model.strEffectiveDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.strEXPIREDATE, htmlAttributes: new { @class = "control-label col-md-2", @style = "width:25%" })
            <div class="form-group col-md-5">
                @Html.EditorFor(model => model.strEXPIREDATE, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @id = "old_expDate" } })
                @Html.ValidationMessageFor(model => model.EXPIREDATE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row">
            @Html.LabelFor(model => model.strNewEffectiveDate, htmlAttributes: new { @class = "control-label col-md-2", @style = "width:25%" })
            <div class="form-group col-md-5">
                <div class='input-group date' id='DateAndTimeEffective'>
                    @Html.EditorFor(model => model.strNewEffectiveDate, new { htmlAttributes = new { @class = "form-control"} })
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
                    @Html.ValidationMessageFor(model => model.strNewEffectiveDate, "", new { @class = "text-danger" })
                </div>

            </div>
            <div class="row">
                @Html.LabelFor(model => model.strNewExpireDate, htmlAttributes: new { @class = "control-label col-md-2", @style = "width:25%" })
                <div class="form-group col-md-5">
                    <div class='input-group date' id='DateAndTime'>
                        @Html.EditorFor(model => model.strNewExpireDate, new { htmlAttributes = new { @class = "form-control" } })
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                    @Html.ValidationMessageFor(model => model.strNewExpireDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.RMName, htmlAttributes: new { @class = "control-label col-md-2", @style = "width:25%" })
                <div class="form-group col-md-5">
                    @Html.EditorFor(model => model.RMName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.RMName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.RMID, htmlAttributes: new { @class = "control-label col-md-2", @style = "width:25%" })
                <div class="form-group col-md-5">
                    @Html.EditorFor(model => model.RMID, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.RMName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ApproverEmail, htmlAttributes: new { @class = "control-label col-md-2", @style = "width:25%" })
                <div class="form-group col-md-5">
                    @Html.DropDownListFor(model => model.ApproverEmail,
                    (IEnumerable<SelectListItem>)ViewBag.Emaillist,
                    "Select Approver's Email", new { @class = "form-control", @id = "approveemail" })
                    @Html.HiddenFor(model => model.ApproverEmail, new { @id = "ApproverEmail" })
                    @Html.ValidationMessageFor(model => model.ApproverEmail, "", new { @class = "text-danger" })
                </div>
            </div>
            @*<div class="form-group">
                    @Html.LabelFor(model => model.UserEmail, htmlAttributes: new { @class = "control-label col-md-2", @style = "width:25%" })
                    <div class="form-group col-md-5">
                        @Html.EditorFor(model => model.UserEmail, new { htmlAttributes = new { @class = "form-control", @id = "useremail" } })
                        @Html.ValidationMessageFor(model => model.UserEmail, "", new { @class = "text-danger" })
                    </div>
                </div>*@
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10" style="padding-left: 95px;">
                    <input type="button" value="Renewal" id="btnCifUpgrade" class="btn btn-success" />
                    @Html.ActionLink("Back", null, null, null, new { href = Request.UrlReferrer, @class = "btn btn-default" })
                    <br />
                </div>
            </div>
        </div>
        }

        <!--Sucess Box-->
        <div class="modal" id="divSuccess">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">×</span>
                        </button>
                        <h4 class="modal-title"> Renewal THE ICONIC Customer</h4>
                    </div>
                    <div class="modal-body">
                        <p>The e-mail has been sent to ....  for renewal approval!</p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-success pull-right" data-dismiss="modal" onclick="window.location = '/Renewal/Index';">OK</button>
                    </div>
                </div>
            </div>
        </div>

        @section Scripts {
            <script src="~/Scripts/bootstrap-datepicker.min.js"></script>
            @Scripts.Render("~/bundles/jqueryval")

            @if (ViewBag.RenewalInfo != null)
    {
                <script type="text/javascript">
                    window.onload = function () {
                        var $confirm = $("#divSuccess");
                        $confirm.show();
                    }
                </script>
            }
            <script type="text/javascript">
                $(function () {
                    var t = $("#old_expDate").val();
                    var Month = t.substr(0, 2);
                    var year = t.substr(2, 3);
                    var oldDate = Month + "/01" + year;
                    var date1 = new Date(oldDate);
                    date1.setMonth(date1.getMonth() + 1);
                    $("#DateAndTime").datetimepicker({
                        format: 'MM/YY',
                        minDate: date1
                    });
                });
                $(function () {
                    var t = $("#old_effDate").val();
                    var Month = t.substr(0, 2);
                    var year = t.substr(2, 3);
                    var oldDate = Month + "/01" + year;
                    var date2 = new Date(oldDate);
                    date2.setMonth(date2.getMonth() + 1);
                    $("#DateAndTimeEffective").datetimepicker({
                        format: 'MM/YY',
                        minDate: date2
                    });
                });
                
                $('#approveemail').on('change', function () {
                    if (this.value != null) {
                        $(".field-validation-error").empty();
                        $('#ApproverEmail').val($("#approveemail option:selected").text());

                    };
                });



                $('#approveemail').focus(function () {
                    $(".field-validation-error").empty();
                });

                $('#btnCifUpgrade').click(function () {
                    var isValid = true;
                    $(".field-validation-error").empty();
                    var approveEmail = $('#approveemail').val();
                    if (approveEmail == null || approveEmail.length < 1) {
                        isValid = false;
                        $('#approveemail').parent().append('<span class="field-validation-error">This field Approver\'s email is required</span>');

                    }

                    if (isValid)
                        $('#create').submit();

                });

            </script>


        }

