@model ABankAdmin.Models.ServiceManagement

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Schedule</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID)

    <div class="form-group">
        @Html.LabelFor(model => model.SERVICENAME, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.SERVICENAME, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
            @Html.ValidationMessageFor(model => model.SERVICENAME, "", new { @class = "text-danger" })
        </div>
    </div>
    @if (@ViewBag.ServiceName == "CRONLOG")
    {
        <div class="form-group">
            @Html.LabelFor(model => model.TimeFormat, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.TimeFormat, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                @Html.ValidationMessageFor(model => model.TimeFormat, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                <div class="col-md-offset-1 col-md-10 checkbox">
                    @Html.EditorFor(model => model.Active)
                    @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    }
    @if (@ViewBag.ServiceName == "SCHEDULETRANSFER")
    {
        <div class="form-group">
            @Html.LabelFor(model => model.TimeFormat, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                <div class='input-group date' id='timeout'>
                    @Html.TextBoxFor(model => model.TimeFormat, new { @class = "form-control", autocomplete = "off", onkeydown = "event.preventDefault()" })
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-time">
                        </span>
                    </span>
                </div>
        @*@Html.EditorFor(model => model.TimeFormat, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = "0", @max = "23" } })
        @Html.EditorFor(model => model.TimeFormat, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.TimeFormat, "", new { @class = "text-danger" })
            </div>
        </div>
    }


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-success" />
            @Html.ActionLink("Cancel", "Index", null, null, new
            {@*href = Request.UrlReferrer,*@@class = "btn btn-default"
})
        </div>
    </div>
</div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @*<link href="~/Scripts/bootstrap-timepicker.css" rel="stylesheet" />
    <script src="~/Scripts/bootstrap-timepicker.js"></script>
    <link href="~/Scripts/MvcBootstrapTimepicker.css" rel="stylesheet" />
    <script src="~/Scripts/MvcBootstrapTimepicker.js"></script>*@
    <script language="javascript" type="text/javascript">
        $(function () {
            $('#timeout').datetimepicker({
                format: 'H'
            });
        });
    </script>
}
