@model ABankAdmin.ViewModels.AdminViewModel
@using ABankAdmin.ViewModels
@{
    ViewBag.Title = "Admin";
}

<h2>@ViewBag.Title.</h2>

@using (Html.BeginForm("Edit", "Admin", FormMethod.Post, new { @class = "form-horizontal", role = "form", autocomplete = "off" }))
{
    @Html.AntiForgeryToken()
    <h4>Edit</h4>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(m => m.UserName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" , @readonly="readonly"})
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.FullName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.FullName, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.BranchID, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownList("BranchID",
                (IEnumerable<SelectListItem>)ViewBag.Branch,
                "Select Branch", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.BranchID, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Role, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Role, ViewBag.Role as List<SelectListItem>, new { @class = "form-control" })
           @*@Html.DropDownList("Role",
        (IEnumerable<SelectListItem>)ViewBag.Role, "Select Role",
        new { @class = "form-control" })*@
            @*@Html.DropDownList("Role", null, "Select Role", new { @class = "form-control" })*@
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.StaffID, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.StaffID, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.StaffID, "", new { @class = "text-danger" })

        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Phone, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Phone, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })

        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-success" value="Save" />
            @Html.ActionLink("Cancel", "Index", null, null, new { href = Request.UrlReferrer, @class = "btn btn-default" })
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
