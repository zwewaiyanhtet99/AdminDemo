@using System.Collections.Generic
@model ABankAdmin.Models.RM_InfoVM

@{
    ViewBag.Title = "Edit";
}

<h2>Edit RM</h2>

@using (Html.BeginForm("Edit", "RM_Info", FormMethod.Post, new { autocomplete = "off", @id = "create" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal" style="width: 70%">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)
        <div class="form-group">
            @Html.LabelFor(model => model.RM_TL_Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownListFor(model => model.RM_TL_Name, ViewBag.RM_TL_List as List<SelectListItem>, "Select RM TL", new { @class = "form-control", @id = "rm_TL_list", onchange = "changeValue(this)" })*@
                @Html.DropDownListFor(model=> model.RM_TL_ID,
                    (IEnumerable<SelectListItem>) ViewBag.RM_TL_List,
                    "Select RM TL", new {@class = "form-control", @id = "rm_TL_list", onchange = "changeValueRM(this)" })
                @Html.HiddenFor(model => model.RM_TL_Name, new {@id = "rmname"})
                @Html.ValidationMessageFor(model => model.RM_TL_ID, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success"/>
                @Html.ActionLink("Cancel", "Index", null, new
            {
                @class = "btn btn-default"
            })
            </div>
        </div>
    </div>
}

<!--Sucess Box-->
<div class="modal" id="divSuccess">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
                <h4 class="modal-title">RM Info</h4>
            </div>
            <div class="modal-body">
                <p>Successfully saved!</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success pull-right" data-dismiss="modal" onclick="window.location = '/RM_Info/Index';">OK</button>
            </div>
        </div>
    </div>
</div>
@section Scripts{
    @if (ViewBag.EditRMInfo != null)
    {
        <script type="text/javascript">
            window.onload = function () {
                var $confirm = $("#divSuccess");
                $confirm.show();
            }
        </script>
    }

    @Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/bundles/RM_Info")


}
