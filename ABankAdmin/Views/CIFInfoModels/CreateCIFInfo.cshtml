@model ABankAdmin.ViewModels.CIFInfo
@{
    ViewBag.Title = "cifinfo";
}

<h2>CIF Info Registration</h2>
<Style>
    .table-wrapper {
        position: relative;
        max-height: 450px;
        overflow: auto;
    }

    thead tr th {
        text-align: center;
    }
</Style>
@using (Html.BeginForm("Create", "CIFInfoModels", FormMethod.Post, new { autocomplete = "off" }))
{
    @Html.AntiForgeryToken()

    <div class="">
        <hr />
        @if (!ViewContext.ViewData.ModelState.IsValid)
        {
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        }
        <div class="form-group col-md-12">
            @Html.LabelFor(model => model.uservm.CIFID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.uservm.CIFID, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.uservm.CIFID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group col-md-12">
            <div class="col-md-offset-2 col-md-10">
                <button type="button" class="btn btn-default" onclick="check()">Fetch</button>
            </div>
        </div>
        <div class="form-group col-md-12">
            @Html.LabelFor(model => model.uservm.USERTYPECODE, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("User Type",
                    (IEnumerable<SelectListItem>)ViewBag.UserType,
                    "Select User Type", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.uservm.USERTYPECODE, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group col-md-12">
            @Html.LabelFor(model => model.uservm.NAME, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.uservm.NAME, new { htmlAttributes = new { @class = "form-control col-md-4" } })
                @Html.ValidationMessageFor(model => model.uservm.NAME, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group col-md-12">
            @Html.LabelFor(model => model.uservm.PHONENO, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.uservm.PHONENO, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.uservm.PHONENO, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group col-md-12">
            @Html.LabelFor(model => model.uservm.NRC, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.uservm.NRC, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.uservm.NRC, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group col-md-12">
            @Html.LabelFor(model => model.uservm.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.uservm.Address, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.uservm.Address, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group col-md-12">
            @Html.LabelFor(model => model.uservm.EXPIREDATE, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class='input-group date' id='fromDate'>
                @Html.TextBoxFor(model => model.uservm.EXPIREDATE, new { @class = "form-control", placeholder = "To Date", autocomplete = "off", onkeydown = "event.preventDefault()" })
                <span class="input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
            </div>
            @Html.ValidationMessageFor(model => model.uservm.EXPIREDATE, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-12">
            @Html.LabelFor(model => model.uservm.REMARK, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.uservm.REMARK, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.uservm.REMARK, "", new { @class = "text-danger" })
            </div>
        </div>

        <hr style="display:block" />
       
        <br />
        <div class="form-group col-md-12">
            <div style="padding-left:35px;">
                @*class="col-md-offset-2 col-md-10"*@
                <input type="submit" id="btnSubmit" value="Register" class="btn btn-success" />
                @Html.ActionLink("Cancel", null, null, null, new { href = Request.UrlReferrer, @class = "btn btn-default" })
                <br />
            </div>
        </div>
    </div>
}

<div class="modal modal-danger" id="divError">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
                <h4 class="modal-title">Getting Retail User</h4>
            </div>
            <div class="modal-body">
                <p id="pMessage"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline pull-left" data-dismiss="modal">Close</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
<script src="~/Scripts/bootstrap-datepicker.min.js"></script>
<div>
    @*@Html.ActionLink("Back to List", "Index")*@
    <br /><br />
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/CIFInfo")
}

<script>
    $(function () {
        $("#fromDate,#toDate").datetimepicker({
            format: 'DD-MM-YYYY'
        });})
</script>



