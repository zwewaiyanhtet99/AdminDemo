@model ABankAdmin.Models.ADS

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#image')
                        .attr('src', e.target.result)
                        .width(320)
                        .height(100);
                };

                reader.readAsDataURL(input.files[0]);
            }
        }
    </script>
}
@using (Html.BeginForm("Edit", "ADS", FormMethod.Post, new { enctype = "multipart/form-data" ,autocomplete="off"}))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>ADS</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID)
    @Html.HiddenFor(model => model.ImageUrl)

    <div class="form-group">
        @Html.LabelFor(model => model.OrderNo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.OrderNo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.OrderNo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ImageName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ImageName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ImageName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ImageRedirectLink, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ImageRedirectLink, new { htmlAttributes = new { @class = "form-control", placeholder = "https://www.google.com" } })
            @Html.ValidationMessageFor(model => model.ImageRedirectLink, "", new { @class = "text-danger" })
        </div>
    </div>

    @*@foreach (var imgPath in Directory.GetFiles(Server.MapPath("~/Content/uploads"), "*.jpg"))
        {
             var img = new FileInfo(imgPath);
            <div class="form-group">
                @Html.LabelFor(model => model.ImageRedirectLink, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="file" name="file" />
                    <img src="" width="240" height="240" />
                    <img id="image" src="#" alt="" />
                </div>
            </div>

            <img src="@Url.Content(String.Format("~/Content/uploads/{0}", img.Name))" />
        }*@
    <div class="form-group">
        @Html.Label("Image", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*<img src='@Url.Action("image", "ADS")' />*@
            <input type="file" name="file" id="ImageUrl" onchange="readURL(this);" />
            <br />
            @*<img src="C:/ADSPhoto/@Url.Content(Model.ImageUrl)" height=100 width=100 />*@
            <img id="image" src="@(Model.ImageUrl)" width="320" height="100" /> @*C:/ADSPhoto@(Model.ImageUrl)*@
            <br />
            @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
        </div>
    </div>
    @*<div class="form-group">
                 @Html.LabelFor(model => model.ImageRedirectLink, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @{

                        string supportedExtensions = "*.jpg,*.JPG,*.png,*.PNG,*.jpeg,*.JPEG";

                        foreach (string imgPath in Directory.GetFiles(Server.MapPath("C:\\ADSPhoto\\Images\\ADS"), "*.*",
                        SearchOption.AllDirectories).Where(s => supportedExtensions.Contains(Path.GetExtension(s)
                        .ToLower())))
                        {
                            var img = new FileInfo(imgPath);
                            <img style="width: 100px; height: 100px;" src="@Url.Content(String.Format("~/images/store/{0}", img.Name))" />
        }

        }
                        </div>
            </div>*@
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-success" />
            @Html.ActionLink("Cancel", "Index", null, null, new { @*href = Request.UrlReferrer,*@ @class = "btn btn-default" })
        </div>
    </div>
</div>
}

@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@

