@model ABankAdmin.Models.Privilege_Usage

@{
    ViewBag.Title = "Edit";
}

<h2>Edit Privilege Usage</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr/>
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        @Html.HiddenFor(model => model.ID)
        <div class="form-group">
            @Html.LabelFor(model => model.CustomerName, htmlAttributes: new {@class = "control-label col-md-2", @style = "width:21%"})
            <div class="form-group col-md-5">
                @Html.EditorFor(model => model.CustomerName, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.CustomerName, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CustomerNRC, htmlAttributes: new {@class = "control-label col-md-2", @style = "width:21%"})
            <div class="form-group col-md-5">
                @Html.EditorFor(model => model.CustomerNRC, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.CustomerNRC, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.IconicNumber, htmlAttributes: new {@class = "control-label col-md-2", @style = "width:21%"})
            <div class="form-group col-md-5">
                @Html.EditorFor(model => model.IconicNumber, new {htmlAttributes = new {@class = "form-control", @readonly = "readonly"}})
                @Html.ValidationMessageFor(model => model.IconicNumber, "", new {@class = "text-danger"})
            </div>
            </div>
        <div class="form-group">
            @Html.LabelFor(model => model.IconicTier, htmlAttributes: new {@class = "control-label col-md-2", @style = "width:21%"})
            <div class="form-group col-md-5">
                @Html.EditorFor(model => model.IconicTier, new {htmlAttributes = new {@class = "form-control", @readonly = "readonly"}})
                @Html.ValidationMessageFor(model => model.IconicTier, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.IconicExpireDate, htmlAttributes: new {@class = "control-label col-md-2", @style = "width:21%"})
            <div class="form-group col-md-5">
                @Html.EditorFor(model => model.IconicExpireDate, new {htmlAttributes = new {@class = "form-control", @readonly = "readonly"}})
                @Html.ValidationMessageFor(model => model.IconicExpireDate, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PrivilegeUsage, htmlAttributes: new {@class = "control-label col-md-2", @style = "width:21%"})
            <div class="form-group col-md-5">
                @Html.EditorFor(model => model.PrivilegeUsage, new {htmlAttributes = new {@class = "form-control", @readonly = "readonly"}})
                @Html.ValidationMessageFor(model => model.PrivilegeUsage, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ServiceDate, htmlAttributes: new {@class = "control-label col-md-2", @style = "width:21%"})
            <div class="form-group col-md-5">
                @Html.EditorFor(model => model.ServiceDate, new {htmlAttributes = new {@class = "form-control", @readonly = "readonly", @id = "privilegedate"}})
                @Html.ValidationMessageFor(model => model.ServiceDate, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ServiceLocation, htmlAttributes: new {@class = "control-label col-md-2", @style = "width:21%"})
            <div class="form-group col-md-5">
                @Html.EditorFor(model => model.ServiceLocation, new {htmlAttributes = new {@class = "form-control", @readonly = "readonly", @id = "location"}})
                @Html.ValidationMessageFor(model => model.ServiceLocation, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10" style="padding-left: 45px;">
                <input type="submit" value="Edit" id="btnNext" class="btn btn-success"/>
                @Html.ActionLink("Cancel", null, null, null, new {href = Request.UrlReferrer, @class = "btn btn-default"})
            </div>
        </div>
    </div>
}
<div class="modal" id="divSuccess">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
                <h4 class="modal-title">The Privilege Usage Edit</h4>
            </div>
            <div class="modal-body">
                <p>The privilege usage edit successfully. ....!</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success pull-right" data-dismiss="modal" onclick="window.location = '/PrivilegeUsage/Index';">OK</button>
            </div>
        </div>
    </div>
</div>
@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/bootstrap-datepicker.min.js"></script>
    @if (ViewBag.PrivilegeUsageEdit != null)
    {
        <script type="text/javascript">
            window.onload = function () {
                var $confirm = $("#divSuccess");
                $confirm.show();
            }
        </script>
    }

}