@model ABankAdmin.ViewModels.CommentSearchViewModel

<div class="row">
    <div class="col-md-4">
        <h3>Feedback Report</h3>
    </div>
</div>

<form id="frmFeedback" action="/Report/Feedback" method="post">
    <div class="row">
        <div class="col-md-2">
            @Html.TextBoxFor(m => m.NAME, new { @class = "form-control", placeholder = "Username" })
        </div>
        <div class="col-md-2">
            @Html.DropDownList("reporttype",
                       (IEnumerable<SelectListItem>)ViewBag.GetReportType,
                       "Select ReportType", new { @class = "form-control" })
            @*Html.DropDownList("reporttype", new SelectList(ViewBag.ReportType, "Value", "Text", ViewBag.ReportType), "Select ReportType", new { @class = "form-control" })*@

            @*@Html.TextBoxFor(m => m.REPORTTYPE, new { @class = "form-control", placeholder = "Report Type" })*@
        </div>
        <div class="col-md-2">
            @Html.TextBoxFor(m => m.comment, new { @class = "form-control", placeholder = "Comment" })
        </div>
        <div class="form-group col-md-2">
            <div class='input-group date' id='fromDate'>
                @Html.TextBoxFor(m => m.FromDate, new { @class = "form-control", placeholder = "From Date", autocomplete = "off", onkeydown = "event.preventDefault()" })
                <span class="input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
            </div>
            @Html.ValidationMessageFor(model => model.FromDate, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-2">
            <div class='input-group date' id='toDate'>
                @Html.TextBoxFor(m => m.ToDate, new { @class = "form-control", placeholder = "From Date", autocomplete = "off", onkeydown = "event.preventDefault()" })
                <span class="input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
            </div>
            @Html.ValidationMessageFor(model => model.ToDate, "", new { @class = "text-danger" })
        </div>
        @*<div class="col-md-3">
                @Html.TextBoxFor(m => m.daterange, new { @class = "form-control", placeholder = "From Date ~ To Date" })
            </div>*@

        <div class="col-md-2">
            @*<button type="button" id="btnSearch" class="btn btn-raised btn-primary btn-block">Get Report</button>*@
            <input type="button" class="btn btn-default col-md-offset-0" value="View" onclick="dateValidation()">
        </div>
    </div>
</form>

<div class="row">
    <iframe id="ifrmReportViewer" frameborder="0" width="100%" height="410" style="overflow:hidden;" scrolling="no"></iframe>
</div>

<!--Date Validation Message Box-->
<div class="modal modal-danger" id="divDateValidate">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
                <h4 class="modal-title">Date Validation Error</h4>
            </div>
            <div class="modal-body">
                <p id="errorMessage"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline pull-left" data-dismiss="modal">Close</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

@*<script type="text/javascript" src="https://cdn.jsdelivr.net/momentjs/latest/moment.min.js"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"></script>
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css" />*@

@section Scripts{
    <script src="~/Scripts/bootstrap-datepicker.min.js"></script>

    @*@Scripts.Render("~/bundles/jquery")*@
    @*<script src="~/Scripts/bootstrap-datepicker.min.js"></script>*@
    <script type="text/javascript">

    //    $(function () {
    //    $('input[name="daterange"]').daterangepicker({
    //        opens: 'left',
    //        startDate: moment().add(-12, 'month'),
    //        endDate: moment(),
    //        "autoUpdateInput": true,
    //        "autoApply": true,
    //        locale: {
    //            format: 'DD-MM-YYYY',
    //            "separator": " ~ "
    //        }
    //    }, function (start, end, label) {
    //        //console.log("A new date selection was made: " + start.format('YYYY-MM-DD') + ' to ' + end.format('YYYY-MM-DD'));
    //    });
    //});
             $(function () {

                 $("#fromDate,#toDate").datetimepicker({
                   format: 'DD-MM-YYYY'
                 });
            })

                @if(Model.CommentVM != null)
                {
                    <text>ShowReport();</text>
                }

        //    function submit() {
        //        $("#frmFeedback").submit();
        //}

        function dateValidation() {
            var start = $('#FromDate').val().split("-");
            var from = new Date(start[2], start[1] - 1, start[0])//Date.parse(start);
            var end = $('#ToDate').val().split("-");
            var to = new Date(end[2], end[1] - 1, end[0])// Date.parse(end);
            if (from > to) {
                $("#errorMessage").text("To Date must be greater than From Date!");
                $("#divDateValidate").modal('toggle');
            }
            else {
                $("#frmFeedback").submit();
            }
        }

        function ShowReport() {
            var url = "../RDLCReports/Aspx/FeedbackReport.aspx";

            var myframe = document.getElementById("ifrmReportViewer");
            if (myframe !== null) {
                if (myframe.src) {
                    myframe.src = url;
                }
                else if (myframe.contentWindow !== null && myframe.contentWindow.location !== null) {
                    myframe.contentWindow.location = url;
                }
                else { myframe.setAttribute('src', url); }
            }

            return false;
        }

    </script>
}
