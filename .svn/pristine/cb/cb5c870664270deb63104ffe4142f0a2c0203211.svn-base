@model ABankAdmin.ViewModels.ApiLogSearchViewModel

<div class="row">
    <div class="col-md-6">
        <h3>User Activity Log Report</h3>
    </div>
</div>

<form id="frmApiLog" action="/Report/ApiLog" method="post">
    <div class="row">
        <div class="form-group col-md-3">
            @*@Html.TextBoxFor(m => m.RequestMethod, new { @class = "form-control", placeholder = "Request Method" })*@
            @Html.DropDownList("RequestMethod", (IEnumerable<SelectListItem>)ViewBag.ReqMethod, "Select Request Method", new { @class = "form-control" })
        </div>

        <div class="form-group col-md-3">
            @Html.TextBoxFor(m => m.RequestPath, new { @class = "form-control", placeholder = "Request Path" })
            @*@Html.DropDownList("Log_Type", (IEnumerable<SelectListItem>)ViewBag.LogType, "Select Log Type", new { @class = "form-control" })*@
        </div>

        <div class="form-group col-md-3">
            @*@Html.TextBoxFor(m => m.UserType, new { @class = "form-control", placeholder = "User Type" })*@
            @Html.DropDownList("UserType", (IEnumerable<SelectListItem>)ViewBag.UserType, "Select User Type", new { @class = "form-control" })
        </div>

        <div class="form-group col-md-3">
            @Html.TextBoxFor(m => m.Username, new { @class = "form-control", placeholder = "Username" })
        </div>

        <div class="form-group col-md-3">
            <div class='input-group date' id='fromDate'>
                @Html.TextBoxFor(m => m.FromDate, new { @class = "form-control", placeholder = "From Date", autocomplete = "off", onkeydown = "event.preventDefault()" })
                <span class="input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
            </div>
            @Html.ValidationMessageFor(model => model.FromDate, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-3">
            <div class='input-group date' id='toDate'>
                @Html.TextBoxFor(m => m.ToDate, new { @class = "form-control", placeholder = "To Date", autocomplete = "off", onkeydown = "event.preventDefault()" })
                <span class="input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
            </div>
            @Html.ValidationMessageFor(model => model.ToDate, "", new { @class = "text-danger" })
        </div>

        <div class="col-md-3">
            <input type="button" class="btn btn-default col-md-offset-0" value="View" onclick="dateValidation()">
        </div>
    </div>
</form>

<div class="row">
    <iframe id="ifrmReportViewer" frameborder="0" width="100%" height="410" style="overflow:hidden;" scrolling="no"></iframe>
</div>

<!--Date Validation Message Box-->
<div class="modal modal-danger" id="divDateValidate">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
                <h4 class="modal-title">Date Validation Error</h4>
            </div>
            <div class="modal-body">
                <p id="errorMessage"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline pull-left" data-dismiss="modal">Close</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

@section Scripts{
    <script type="text/javascript">

         $(function () {
             $("#fromDate,#toDate").datetimepicker({

                 format: 'DD-MM-YYYY HH:mm'
             });
        });

                @if(Model.apilogVM != null)
                {
                    <text>ShowReport();</text>
                }

        //    function submit() {
        //        $("#frmApiLog").submit();
        //}

        function dateValidation() {
            var start = $('#FromDate').val().split(/[- :]/);
            var from = new Date(start[2], start[1] - 1, +start[0], start[3], start[4]);//Date.parse(start)
            var end = $('#ToDate').val().split(/[- :]/);
            var to = new Date(end[2], end[1] - 1, +end[0], end[3], end[4]);//Date.parse(end)
            if (from > to) {
                $("#errorMessage").text("To Date must be greater than From Date!");
                $("#divDateValidate").modal('toggle');
            }
            else {
                $("#frmApiLog").submit();
            }
        }

        function ShowReport() {
            var url = "../RDLCReports/Aspx/ApiLogReport.aspx";

            var myframe = document.getElementById("ifrmReportViewer");
            if (myframe !== null) {
                if (myframe.src) {
                    myframe.src = url;
                }
                else if (myframe.contentWindow !== null && myframe.contentWindow.location !== null) {
                    myframe.contentWindow.location = url;
                }
                else { myframe.setAttribute('src', url); }
            }

            return false;
        }

    </script>
}

