@using System.Collections.Generic
@model ABankAdmin.ViewModels.CIFInfoVM

    @{
        ViewBag.Title = "Edit";
    }

    <h2>Edit THE ICONIC</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ID)
            @Html.HiddenFor(model => model.ApproverEmail)
            @Html.HiddenFor(model => model.UserEmail)

            <div class="form-group">
                @Html.LabelFor(model => model.CIFID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="form-group col-md-5">
                    @Html.EditorFor(model => model.CIFID, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.CIFID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.NAME, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="form-group col-md-5">
                    @Html.EditorFor(model => model.NAME, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.NAME, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.PHONENO, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="form-group col-md-5">
                    @Html.EditorFor(model => model.PHONENO, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.PHONENO, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.USERTYPE, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="form-group col-md-5">
                    @Html.EditorFor(model => model.USERTYPE, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.USERTYPE, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.USERTYPECODE, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="form-group col-md-5">
                    @Html.EditorFor(model => model.USERTYPECODE, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.USERTYPECODE, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.NRC, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="form-group col-md-5">
                    @Html.EditorFor(model => model.NRC, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.NRC, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="form-group col-md-5">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.REMARK, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="form-group col-md-5">
                    @Html.EditorFor(model => model.REMARK, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.REMARK, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.strEXPIREDATE, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="form-group col-md-5">
                    @Html.EditorFor(model => model.strEXPIREDATE, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.EXPIREDATE, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.strEffectiveDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="form-group col-md-5">
                    @Html.EditorFor(model => model.strEffectiveDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.strEffectiveDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.BranchName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="form-group col-md-5">
                    @Html.EditorFor(model => model.BranchName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.BranchName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.RMName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="form-group col-md-5">
                    @Html.DropDownListFor(model => model.RMID,
                    (IEnumerable<SelectListItem>)ViewBag.RMList,
                    "Select RM", new { @class = "form-control", @id = "rmlist" })
                    @Html.HiddenFor(model => model.RMName, new { @id = "rmname" })
                    @Html.ValidationMessageFor(model => model.RMName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.RMID, htmlAttributes: new { @class = "control-label col-md-2"})
                <div class="form-group col-md-5">
                    @Html.EditorFor(model => model.RMID, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @id = "rmID" } })
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Confirm" class="btn btn-success" />
                    </div>
                </div>
            </div></div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
            
@section Scripts {
    <script src="~/Scripts/bootstrap-datepicker.min.js"></script>
    @Scripts.Render("~/bundles/jqueryval")
   <script type="text/javascript">
       $('#rmlist').on('change', function () {
            if (this.value != null) {
                $("#uservm_RMID").empty();
                $(".field-validation-error").empty();
                $('#rmID').val(this.value);
                $('#rmname').val($("#rmlist option:selected").text());


            };
        });

        
    </script>


}