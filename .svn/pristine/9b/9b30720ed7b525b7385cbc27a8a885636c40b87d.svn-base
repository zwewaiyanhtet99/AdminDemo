@model ABankAdmin.ViewModels.CIFInfoVMForDeactivator
@{
    ViewBag.Title = "CreateCifInfoForUpgrade";
}

<h3>Create CIF Info For Upgrade</h3>
<Style>
    .table-wrapper {
        position: relative;
        max-height: 450px;
        overflow: auto;
    }

    thead tr th {
        text-align: center;
    }
</Style>
@using (Html.BeginForm("CreateCifInfoForUpgrade", "CIFInfoModels", FormMethod.Post, new { autocomplete = "off", @id = "create" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <hr />
        @if (!ViewContext.ViewData.ModelState.IsValid)
        {
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        }
        @Html.HiddenFor(model => model.ID)
        
        <div class="row">
            @Html.LabelFor(model => model.CIFID, htmlAttributes: new { @class = "control-label col-md-2", @style = "width:25%" })
            <div class="form-group col-md-5">
                @Html.EditorFor(model => model.CIFID, new { htmlAttributes = new { @class = "form-control", required = "required", maxlength = "20" } })
                 @Html.ValidationMessageFor(model => model.CIFID, "", new { @class = "text-danger" })

            </div>
            <div class="form-group col-md-2" style="margin-left: -1px;">
                <button type="button" class="btn btn-default" onclick="checkInfo()">Fetch</button>
            </div>
        </div>
        <div class="row">
            @Html.LabelFor(model => model.USERTYPE, htmlAttributes: new {@class = "control-label col-md-2", @style = "width:25%" })
            <div class="form-group col-md-5">
                @Html.EditorFor(model => model.USERTYPE, new {htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.USERTYPE, "", new {@class = "text-danger"})
            </div>
            <div class="row">
                <div class="col-md-offset-2 col-md-5" style="margin-left: 25.5%">
                    <div class="checkbox" style="padding-left: 9px; margin-top: 0px;">
                        @Html.CheckBoxFor(model => model.IconicReservedNo, new {@id = "chkIconic", @onclick = "showBooking()"})
                        @Html.ValidationMessageFor(model => model.IconicReservedNo, "", new {@class = "text-danger"})
                        @Html.LabelFor(model => model.IconicReservedNo, htmlAttributes: new {@style = "padding-left: 0px;"})
                    </div>
                </div>
            </div><br/>
        </div>
        <div class="row" style="display: none" id="bookinglist">
            @Html.LabelFor(model => model.IconicReservedlist, htmlAttributes: new { @class = "control-label col-md-2", @style = "width:25%" })
            <div class="form-group col-md-5">
                @Html.DropDownListFor(model => model.IconicReservedlist,
                    (IEnumerable<SelectListItem>)ViewBag.Booking,
                    "Select Reserved Number", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IconicReservedlist, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            @Html.LabelFor(model => model.USERTYPECODE, htmlAttributes: new { @class = "control-label col-md-2", @style = "width:25%" })
            <div class="form-group col-md-5">
                @Html.EditorFor(model => model.USERTYPECODE, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.USERTYPECODE, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            @Html.LabelFor(model => model.NAME, htmlAttributes: new { @class = "control-label col-md-2", @style = "width:25%" })
            <div class="form-group col-md-5">
                @Html.EditorFor(model => model.NAME, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.NAME, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row">
            @Html.LabelFor(model => model.PHONENO, htmlAttributes: new { @class = "control-label col-md-2", @style = "width:25%" })
            <div class="form-group col-md-5">
                @Html.EditorFor(model => model.PHONENO, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.PHONENO, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            @Html.LabelFor(model => model.NRC, htmlAttributes: new { @class = "control-label col-md-2", @style = "width:25%" })
            <div class="form-group col-md-5">
                @Html.EditorFor(model => model.NRC, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.NRC, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            @Html.LabelFor(model => model.Address, htmlAttributes: new {@class = "control-label col-md-2", @style = "width:25%"})
            <div class="form-group col-md-5">
                @Html.TextAreaFor(model => model.Address, new {@class = "form-control", @readonly = "readonly"})
                @Html.ValidationMessageFor(model => model.Address, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="row">
            @Html.LabelFor(model => model.strEffectiveDate, htmlAttributes: new { @class = "control-label col-md-2", @style = "width:25%" })
            <div class="form-group col-md-5">
                @Html.EditorFor(model => model.strEffectiveDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.strEffectiveDate, "", new { @class = "text-danger" })
            </div>

        </div>
        <div class="row">
            @Html.LabelFor(model => model.strEXPIREDATE, htmlAttributes: new { @class = "control-label col-md-2", @style = "width:25%" })
            <div class="form-group col-md-5">
                @Html.EditorFor(model => model.strEXPIREDATE, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.EXPIREDATE, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="row">
            @Html.LabelFor(model => model.strNewEffectiveDate, htmlAttributes: new { @class = "control-label col-md-2", @style = "width:25%" })
            <div class="form-group col-md-5">
                @Html.EditorFor(model => model.strNewEffectiveDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.strNewEffectiveDate, "", new { @class = "text-danger" })
            </div>

        </div>
        <div class="row">
            @Html.LabelFor(model => model.strNewExpireDate, htmlAttributes: new { @class = "control-label col-md-2", @style = "width:25%" })
            <div class="form-group col-md-5">
                @Html.EditorFor(model => model.strNewExpireDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.strNewExpireDate, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="row">
            @Html.LabelFor(model => model.BranchName, htmlAttributes: new { @class = "control-label col-md-2", @style = "width:25%" })
            <div class="form-group col-md-5">
                @Html.EditorFor(model => model.BranchName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.BranchName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            @Html.LabelFor(model => model.RMName, htmlAttributes: new { @class = "control-label col-md-2", @style = "width:25%" })
            <div class="form-group col-md-5">
                @Html.EditorFor(model => model.RMName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.RMName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            @Html.LabelFor(model => model.RMID, htmlAttributes: new { @class = "control-label col-md-2", @style = "width:25%" })
            <div class="form-group col-md-5">
                @Html.EditorFor(model => model.RMID, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
        </div>
        <br />
        <div class="form-group col-md-12">
            <div style="padding-left: 245px;">
                @*class="col-md-offset-2 col-md-10"*@
                <input type="submit" id="btnSubmit" value="Register" class="btn btn-success" />
                @Html.ActionLink("Cancel", null, null, null, new { href = Request.UrlReferrer, @class = "btn btn-default" })
                <br />
            </div>
        </div>
    </div>
}

<div class="modal modal-danger" id="divError">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
                <h4 class="modal-title">Getting Retail User</h4>
            </div>
            <div class="modal-body">
                <p id="pMessage"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline pull-left" data-dismiss="modal">Close</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
<div class="modal modal-danger" id="divErrorForiconictype">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
                <h4 class="modal-title">Getting Iconic Number</h4>
            </div>
            <div class="modal-body">
                <p>Something went wrong!</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline pull-left" data-dismiss="modal" onclick="window.location = '/CIFInfoModels/Index';">Close</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
<div class="modal modal-danger" id="divGenerateCode">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
                <h4 class="modal-title">Getting New Iconic Number</h4>
            </div>
            <div class="modal-body">
                <p>@ViewBag.GetCode</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline pull-left" data-dismiss="modal" onclick="window.location = '/CIFInfoModels/Index';">Close</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
<div>
    @*@Html.ActionLink("Back to List", "Index")*@
    <br /><br />
</div>
@section Scripts {
    <script src="~/Scripts/bootstrap-datepicker.min.js"></script>
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/CIFInfoForUpgrade")
    <script type="text/javascript">
      
        $(function () {

            var selected = $('#bookinglist option:selected'), // Seems to be unused
                $busy = $('#chkIconic'), // Always cache your queries
                $dropdown = $('#bookinglist'); // Caching queries

            $dropdown.hide(); // Hidden by default initially

            $busy.change(function () {
                if ($busy.prop('checked')) {
                    $dropdown.show().focus().click();
                } else {
                    $busy.prop('checked', false);
                    $dropdown.blur().hide();
                }
            });

            $busy.change(); // This sets initial state
        });
        function showBooking() {
            if (!$(this).is(':checked')) {
                $('#bookinglist').css('display', 'block');
            }
        }
       </script>
 
    @if (ViewBag.CifError != null)
    {
        <script type="text/javascript">
            window.onload = function () {
                var $confirm = $("#divErrorForiconictype");
                $confirm.show();
            }
        </script>
    }
@if (ViewBag.GetCode != null)
    {
    <script type="text/javascript">
            window.onload = function () {
                var $confirm = $("#divGenerateCode");
                $confirm.show();
            }
    </script>
}

}






