@model ABankAdmin.Models.Utilities

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#image')
                        .attr('src', e.target.result)
                        .width(100)
                        .height(100);
                };

                reader.readAsDataURL(input.files[0]);
            }
        }
    </script>
}

@using (Html.BeginForm("Edit", "Utilities", FormMethod.Post, new { enctype = "multipart/form-data",autocomplete="off" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Utilities</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)
        @Html.HiddenFor(model => model.ImagePath)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImagePath, htmlAttributes: new { @class = "control-label col-md-2" })
            @*<div class="col-md-10">
                    @Html.EditorFor(model => model.ImagePath, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ImagePath, "", new { @class = "text-danger" })
                </div>*@
            <div class="col-md-10">
                <input type="file" name="file" id="ImagePath" onchange="readURL(this);" />
                <br />
                <img id="image" src="@(Model.ImagePath)" width="100" height="100" /> @*load image from server*@
                @Html.ValidationMessageFor(model => model.ImagePath, "", new { @class = "text-danger" })
                <br />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Biller_Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Biller_Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Biller_Code, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Remark, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DiscountPercent, htmlAttributes: new { @class = "control-label col-md-2" })
            @*<div class="col-md-10">
                    @Html.DropDownList("DiscountCode", (IEnumerable<SelectListItem>)ViewBag.Rule, "Select Discount Type", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.DiscountCode, "", new { @class = "text-danger" })
                </div>*@
            <div class="col-md-10">
                @Html.EditorFor(model => model.DiscountPercent, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = "0", @max = "100" } })
                @Html.ValidationMessageFor(model => model.DiscountPercent, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Utility_Type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Utility_Type", (IEnumerable<SelectListItem>)ViewBag.UltType, "Select Utility Type", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Utility_Type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success" />
                @Html.ActionLink("Cancel", "Index", null, null, new { @*href = Request.UrlReferrer,*@ @class = "btn btn-default" })
            </div>
        </div>
    </div>
}



@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@

