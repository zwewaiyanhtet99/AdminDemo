@model ABankAdmin.ViewModels.PrivilegeUsageCreateVM
@{
    ViewBag.Title = "Create Privilege Usage";
}

<h2>Create Privilege Usage</h2>

@using (Html.BeginForm("CreatePrivilegeUsage", "PrivilegeUsage", FormMethod.Post, new { autocomplete = "off", @id = "create" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
     <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.CustomerName, htmlAttributes: new { @class = "control-label col-md-2", @style = "width:21%" })
            <div class="form-group col-md-5">
                @Html.EditorFor(model => model.CustomerName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CustomerName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CustomerNRC, htmlAttributes: new { @class = "control-label col-md-2", @style = "width:21%" })
            <div class="form-group col-md-5">
                @Html.EditorFor(model => model.CustomerNRC, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CustomerNRC, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.IconicNumber, htmlAttributes: new { @class = "control-label col-md-2", @style = "width:21%" })
            <div class="form-group col-md-5">
                @Html.EditorFor(model => model.IconicNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IconicNumber, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-md-2" style="margin-left: -1px;">
                <button type="button" class="btn btn-default" onclick="checkInfo()">Fetch</button>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.IconicTier, htmlAttributes: new { @class = "control-label col-md-2", @style = "width:21%" })
            <div class="form-group col-md-5">
                @Html.EditorFor(model => model.IconicTier, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.IconicTier, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.IconicExpireDate, htmlAttributes: new {@class = "control-label col-md-2", @style = "width:21%"})
            <div class="form-group col-md-5">
                @Html.EditorFor(model => model.IconicExpireDate, new {htmlAttributes = new {@class = "form-control", @readonly = "readonly"}})
                @Html.ValidationMessageFor(model => model.IconicExpireDate, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PrivilegeName, htmlAttributes: new {@class = "control-label col-md-2", @style = "width:21%"})
            <div class="form-group col-md-5">
                @Html.DropDownListFor(model => model.PrivilegeID,
                    (IEnumerable<SelectListItem>) ViewBag.PrivilegeList,
                    "Select Privilege Usage", new {@class = "form-control", @id = "infolist", onchange = "changeValuePrivilege(this)"})
                @Html.HiddenFor(model => model.PrivilegeName, new {@id = "name"})
                @Html.ValidationMessageFor(model => model.PrivilegeName, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.DateAndTime, htmlAttributes: new {@class = "control-label col-md-2", @style = "width:21%"})
            <div class="form-group col-md-5">
                @Html.EditorFor(model => model.DateAndTime, new {htmlAttributes = new {@class = "form-control", @readonly = "readonly",@id="privilegedate"}})
                @Html.ValidationMessageFor(model => model.DateAndTime, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Time, htmlAttributes: new {@class = "control-label col-md-2", @style = "width:21%"})
            <div class="form-group col-md-5">
                @Html.EditorFor(model => model.Time, new {htmlAttributes = new {@class = "form-control", @readonly = "readonly", @id = "privilegetime" } })
                @Html.ValidationMessageFor(model => model.Time, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Location, htmlAttributes: new {@class = "control-label col-md-2", @style = "width:21%"})
            <div class="form-group col-md-5">
                @Html.EditorFor(model => model.Location, new {htmlAttributes = new {@class = "form-control", @readonly = "readonly", @id = "location" } })
                @Html.ValidationMessageFor(model => model.Location, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.NoOfFollowers, htmlAttributes: new {@class = "control-label col-md-2", @style = "width:21%"})
            <div class="form-group col-md-5">
                @Html.EditorFor(model => model.NoOfFollowers, new {htmlAttributes = new {@class = "form-control", @readonly = "readonly", @id = "followers" } })
                @Html.ValidationMessageFor(model => model.NoOfFollowers, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Staff, htmlAttributes: new { @class = "control-label col-md-2", @style = "width:21%" })
            <div class="form-group col-md-5">
                @Html.EditorFor(model => model.Staff, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @id = "staff" } })
                @Html.ValidationMessageFor(model => model.Staff, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10" style="padding-left: 45px;">
                <input type="button" value="Create" id="btnNext" class="btn btn-success" />
                    @Html.ActionLink("Cancel", null, null, null, new { href = Request.UrlReferrer, @class = "btn btn-default" })
            </div>
        </div>
    </div>
}
<div class="modal modal-danger" id="divError">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
                <h4 class="modal-title">Getting Retail User</h4>
            </div>
            <div class="modal-body">
                <p id="pMessage"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline pull-left" data-dismiss="modal">Close</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/bundles/Privilege")

    <script src="~/Scripts/bootstrap-datepicker.min.js"></script>
    <script type="text/javascript">

        $(function () {
            $("#DateAndTime").datetimepicker();
        });

        $('#btnNext').click(function () {
            $('#create').submit();
        });

        

    </script>

}

